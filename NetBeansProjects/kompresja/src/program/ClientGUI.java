/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package program;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.attribute.standard.MediaSizeName;
import javax.swing.JOptionPane;


/**
 *
 * @author "Kajetan Brzuszczak 209869"
 * @zadanie 1
 */


class TCPClient extends Thread
{
    ClientGUI clientGUI;
    
    String nazwaKlienta = "";
    Socket mojeGniazdko;
    
    String ostatnioWyslane = "", ostatnioOdebrane = "";
    
    ObjectOutputStream strumienWysylanych;
    ObjectInputStream strumienOdbieranych;
    
    boolean zakoncz = false;
    TCPClient(String ip , int port, ClientGUI clientGUI, String nazwaKlienta) throws Exception
    {
        this.nazwaKlienta = nazwaKlienta;
        
        mojeGniazdko = new Socket();        
        mojeGniazdko.connect(new InetSocketAddress(ip, port),1000);
        
        this.clientGUI = clientGUI;
        
        strumienWysylanych = new ObjectOutputStream(mojeGniazdko.getOutputStream());
        strumienOdbieranych = new ObjectInputStream(mojeGniazdko.getInputStream());
        napisz(nazwaKlienta);
        this.start();        
    }
    
    public void napisz(String wiadomosc) throws IOException
    {
        strumienWysylanych.writeObject(wiadomosc);
    }
    
    
    public void zakoncz() throws IOException
    {
        zakoncz = true;
        
        mojeGniazdko.close();
        strumienWysylanych.close();
        strumienOdbieranych.close();
    }
    
    @Override
    public void run()
    {   
        while(!zakoncz)
        {
            try {
                ostatnioOdebrane = (String)strumienOdbieranych.readObject();
                
                
                if(ostatnioOdebrane.equals("exit"))
                {
                    zakoncz();
                }
                //System.out.printf(Thread.currentThread().getName() + "#Serwer: " + ostatnioOdebrane + "\n");
                clientGUI.wyswietl(ostatnioOdebrane);
            } catch (IOException ex) {
                //Logger.getLogger(TCPClient.class.getName()).log(Level.SEVERE, null, ex);
                continue;
            } catch (ClassNotFoundException ex) {
               // Logger.getLogger(TCPClient.class.getName()).log(Level.SEVERE, null, ex);
            }                
        }
        System.out.print("Koniec");
    }
} 

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author "Kajetan Brzuszczak 209869"
 */
public class ClientGUI extends javax.swing.JFrame {
    TCPClient tcpClient;
    /**
     * Creates new form ClientGUI
     */
    public ClientGUI(){
        initComponents();        
        this.setLocation(700, 100);
        jTextArea1.setEditable(false);
        jTextArea1.setEnabled(true);
        
        try {
            String nazwaKlienta = JOptionPane.showInputDialog("Podaj imie");
            tcpClient = new TCPClient("localhost", 3310, this, nazwaKlienta);
            jLabel4.setText(nazwaKlienta);
        } catch (Exception ex) {
            
            Object []obj = {"Ok"};
            int i = JOptionPane.showOptionDialog(null, "Nie mo�na si� po��czy�", "", 1,  0, null, obj , null);
            
            System.exit(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Napisz:");

        jLabel2.setText("Dialog:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Klient");

        jTextArea1.setColumns(5);
        jTextArea1.setRows(10);
        jScrollPane1.setViewportView(jTextArea1);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel4.setText("tutaj b�dzie login");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1)
                            .addComponent(jScrollPane1))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        try {
            // TODO add your handling code here:
            tcpClient.napisz(jTextField1.getText());
        } catch (IOException ex) {
            //Logger.getLogger(ClientGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextField1.setText("");
    }                                           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ClientGUI().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(ClientGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration                   

    void wyswietl(String wiadomosc) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        String pom = jTextArea1.getText();
        jTextArea1.setText(wiadomosc + "\n" + pom);
    }
}

